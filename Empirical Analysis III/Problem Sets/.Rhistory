}
}
diff_gradnocon <- felm(data=data, v ~ T + mean_grad_new |dccode0|0| placecode0) #clustered at the community level, no FE
summary(diff_gradnocon)
diff_gradnocon <- felm(data=data, v ~ T + mean_grad_new |0|0| placecode0) #clustered at the community level, no FE
summary(diff_gradnocon)
v
v = t1_var[3]
data$v <- data[,v]
diff_gradnocon <- felm(data=data, v ~ T + mean_grad_new |0|0| placecode0) #clustered at the community level, no FE
summary(diff_gradnocon)
v = t1_var[6]
v
data$v <- data[,v]
diff_gradnocon <- felm(data=data, v ~ T + mean_grad_new |0|0| placecode0) #clustered at the community level, no FE
summary(diff_gradnocon)
diff_gradnocon <- felm(data=data, v ~ T + mean_grad_new |dccode0|0| placecode0) #clustered at the community level, no FE
summary(diff_gradnocon)
diff_gradnocon <- felm(data=data, v ~ mean_grad_new |0|0| placecode0) #clustered at the community level, no FE
summary(diff_gradnocon)
## Table 1
# list all variables to be tested
t1_var <- c("base_hhpovrate0", "prop_head_f_a0", "sexratio0_a",
"prop_indianwhite0", "kms_to_road0", "kms_to_town0",
"prop_matric_m0", "prop_matric_f0", "baseline_hhdens0",
"kms_to_subs0", "mean_grad_new",
"prop_emp_f0", "prop_emp_f1", "d_prop_emp_f", "prop_emp_m0", "prop_emp_m1", "d_prop_emp_m")
t1_var0 <- c("base_hhpovrate0", "prop_head_f_a0", "sexratio0_a",
"prop_indianwhite0", "kms_to_road0", "kms_to_town0",
"prop_matric_m0", "prop_matric_f0", "baseline_hhdens0",
"kms_to_subs0", "mean_grad_new")
# Name vector
t1_var_names <- c("Poverty Rate", "", "Female-headed HHs", "", "Adult sex ratio (F/M)","",
"Indian, White adults x 10", "",  "Kilometers to road", "", "Kilometers to town","",
"Men with High School", "", "Women with High School", "", "Household Density","",
"Kilometers from grid", "", "Land Gradiant","",
"Female Empl. rate 1996", "",  "Female Empl. rate 2001", "",
"Difference Female Empl.", "",
"Male Empl. rate 1996", "","Male Empl. rate 2001", "",
"Difference Male Empl.", "", "N Communities")
# Create table manually (it is a mix of means, differences etc, stargazer can't do everything unfortunately)
t1_col1 <- c()
t1_col2 <- c()
t1_col3 <- c()
t1_col4 <- c()
t1_col5 <- c()
t1_col6 <- c()
# For each variable, get the mean, the mean for treated, the mean for untreated, differences etc
for (v in t1_var){
data$v <- data[,v]
# Mean
sd <- paste("(", round(sd(data$v), 3), ")", sep="")
t1_col1 <- append(t1_col1, as.character(round(mean(data$v),3)))
t1_col1 <- append(t1_col1, sd)
# Mean for treated
sd <- paste("(", round(sd(data[data$T==1,]$v), 3), ")", sep="")
t1_col2 <- append(t1_col2, as.character(round(mean(data[data$T==1,]$v), 3)))
t1_col2 <- append(t1_col2, sd)
# Mean for untreated
sd <- paste("(", round(sd(data[data$T==0,]$v), 3), ")", sep="")
t1_col3 <- append(t1_col3, as.character(round(mean(data[data$T==0,]$v), 3)))
t1_col3 <- append(t1_col3, sd)
# Regression, no FE, no covariates. Extract p-value & compute the *** using home made function
diff <- felm(data=data, v ~ T |0|0|0) #clustered at the community level, no FE
diff_s <- stars(as.numeric(diff$pval[2]))
sd <- paste("(", round(diff$se[2],2), ")", sep="")
t1_col4 <- append(t1_col4, as.character(paste(round(diff$coefficients[2], 3), diff_s, sep="")))
t1_col4 <- append(t1_col4, sd)
# Regression with FE and covariates (for all but mean_grad_ne and employment variables)
#if (v !%in% c("mean_grad_new", "prop_emp_f0", "prop_emp_f1", "d_prop_emp_f", "prop_emp_m0", "prop_emp_m1", "d_prop_emp_m")){
diff_gradnocon <- felm(data=data, v ~ mean_grad_new |0|0| placecode0) #clustered at the community level, no FE
diffno_s <- stars(as.numeric(diff_gradnocon$cpval[3]))
t1_col5 <- append(t1_col5, paste(round(diff_gradnocon$coefficients[3], 3), diffno_s, sep=""))
t1_col5 <- append(t1_col5, paste("(", round(diff_gradnocon$cse[3],3), ")", sep=""))
# Additional controls, district.f.e. clustered at the community level
diff_gradcon <- felm(data=data, formula=as.formula(spec(y="v", x=c("1",  "mean_grad_new", t1_var0[t1_var0 != v & t1_var0 != "mean_grad_new"]), fe="dccode0")))
diffco_s <- stars(as.numeric(diff_gradcon$cpval[2]))
t1_col6 <- append(t1_col6, paste(round(diff_gradcon$coefficients[2], 3), diffco_s, sep=""))
t1_col6 <- append(t1_col6, paste("(", round(diff_gradcon$cse[2],3), ")", sep=""))
# }
}
# Put everything together
table1_2 <- data.frame(Covariates =  c(t1_var_names),
"Mean FullSample" = c(t1_col1, nrow(data)),
"Mean Eskom" = c(t1_col2, nrow(data[data$T==1,])),
"Mean NoEskom" = c(t1_col3, nrow(data[data$T==1,])),
"Diff in Mean, col 2-3" = c(t1_col4, nrow(data)),
"Diff in Mean, by gradient, no control" = c(t1_col5[1:20], rep("",14), nrow(data)),
"Diff in Mean, by gradient, controls" = c(t1_col6[1:20], rep("",14), nrow(data)))
stargazer(table1_2, summary=FALSE, no.space = TRUE, type="text",
title = "Baseline Variables by Electrification Project Status and Gradient",
out="table1.tex", notes=c("Column 5 shows coefficients from a regression of each covariate on gradient",
"Column 6 additionally controls for all other covariates and district fixed effects",
"Differences in columns 4-6 are significant at p < 0.01***, p < 0.05** or p <0.1* level"))
v = t1_var0[3]
data$v <- data[,v]
# Mean
sd <- paste("(", round(sd(data$v), 3), ")", sep="")
t1_col1 <- append(t1_col1, as.character(round(mean(data$v),3)))
# Regression with FE and covariates (for all but mean_grad_ne and employment variables)
#if (v !%in% c("mean_grad_new", "prop_emp_f0", "prop_emp_f1", "d_prop_emp_f", "prop_emp_m0", "prop_emp_m1", "d_prop_emp_m")){
diff_gradnocon <- felm(data=data, v ~ mean_grad_new |0|0| placecode0) #clustered at the community level, no FE
summary(diff_gradnocon)
# Additional controls, district.f.e. clustered at the community level
diff_gradcon <- felm(data=data, formula=as.formula(spec(y="v", x=c("1",  "mean_grad_new", t1_var0[t1_var0 != v & t1_var0 != "mean_grad_new"]), fe="dccode0")))
summary(diff_gradcon)
diff_gradcon$coefficients
## Table 1
# list all variables to be tested
t1_var <- c("base_hhpovrate0", "prop_head_f_a0", "sexratio0_a",
"prop_indianwhite0", "kms_to_road0", "kms_to_town0",
"prop_matric_m0", "prop_matric_f0", "baseline_hhdens0",
"kms_to_subs0", "mean_grad_new",
"prop_emp_f0", "prop_emp_f1", "d_prop_emp_f", "prop_emp_m0", "prop_emp_m1", "d_prop_emp_m")
t1_var0 <- c("base_hhpovrate0", "prop_head_f_a0", "sexratio0_a",
"prop_indianwhite0", "kms_to_road0", "kms_to_town0",
"prop_matric_m0", "prop_matric_f0", "baseline_hhdens0",
"kms_to_subs0", "mean_grad_new")
# Name vector
t1_var_names <- c("Poverty Rate", "", "Female-headed HHs", "", "Adult sex ratio (F/M)","",
"Indian, White adults x 10", "",  "Kilometers to road", "", "Kilometers to town","",
"Men with High School", "", "Women with High School", "", "Household Density","",
"Kilometers from grid", "", "Land Gradiant","",
"Female Empl. rate 1996", "",  "Female Empl. rate 2001", "",
"Difference Female Empl.", "",
"Male Empl. rate 1996", "","Male Empl. rate 2001", "",
"Difference Male Empl.", "", "N Communities")
# Create table manually (it is a mix of means, differences etc, stargazer can't do everything unfortunately)
t1_col1 <- c()
t1_col2 <- c()
t1_col3 <- c()
t1_col4 <- c()
t1_col5 <- c()
t1_col6 <- c()
# For each variable, get the mean, the mean for treated, the mean for untreated, differences etc
for (v in t1_var){
data$v <- data[,v]
# Mean
sd <- paste("(", round(sd(data$v), 3), ")", sep="")
t1_col1 <- append(t1_col1, as.character(round(mean(data$v),3)))
t1_col1 <- append(t1_col1, sd)
# Mean for treated
sd <- paste("(", round(sd(data[data$T==1,]$v), 3), ")", sep="")
t1_col2 <- append(t1_col2, as.character(round(mean(data[data$T==1,]$v), 3)))
t1_col2 <- append(t1_col2, sd)
# Mean for untreated
sd <- paste("(", round(sd(data[data$T==0,]$v), 3), ")", sep="")
t1_col3 <- append(t1_col3, as.character(round(mean(data[data$T==0,]$v), 3)))
t1_col3 <- append(t1_col3, sd)
# Regression, no FE, no covariates. Extract p-value & compute the *** using home made function
diff <- felm(data=data, v ~ T |0|0|0) #clustered at the community level, no FE
diff_s <- stars(as.numeric(diff$pval[2]))
sd <- paste("(", round(diff$se[2],2), ")", sep="")
t1_col4 <- append(t1_col4, as.character(paste(round(diff$coefficients[2], 3), diff_s, sep="")))
t1_col4 <- append(t1_col4, sd)
# Regression with FE and covariates (for all but mean_grad_ne and employment variables)
#if (v !%in% c("mean_grad_new", "prop_emp_f0", "prop_emp_f1", "d_prop_emp_f", "prop_emp_m0", "prop_emp_m1", "d_prop_emp_m")){
diff_gradnocon <- felm(data=data, v ~ mean_grad_new |0|0| placecode0) #clustered at the community level, no FE
diffno_s <- stars(as.numeric(diff_gradnocon$cpval[2]))
t1_col5 <- append(t1_col5, paste(round(diff_gradnocon$coefficients[2], 3), diffno_s, sep=""))
t1_col5 <- append(t1_col5, paste("(", round(diff_gradnocon$cse[2],3), ")", sep=""))
# Additional controls, district.f.e. clustered at the community level
diff_gradcon <- felm(data=data, formula=as.formula(spec(y="v", x=c("1",  "mean_grad_new", t1_var0[t1_var0 != v & t1_var0 != "mean_grad_new"]), fe="dccode0")))
diffco_s <- stars(as.numeric(diff_gradcon$cpval[1]))
t1_col6 <- append(t1_col6, paste(round(diff_gradcon$coefficients[1], 3), diffco_s, sep=""))
t1_col6 <- append(t1_col6, paste("(", round(diff_gradcon$cse[1],3), ")", sep=""))
# }
}
# Put everything together
table1_2 <- data.frame(Covariates =  c(t1_var_names),
"Mean FullSample" = c(t1_col1, nrow(data)),
"Mean Eskom" = c(t1_col2, nrow(data[data$T==1,])),
"Mean NoEskom" = c(t1_col3, nrow(data[data$T==1,])),
"Diff in Mean, col 2-3" = c(t1_col4, nrow(data)),
"Diff in Mean, by gradient, no control" = c(t1_col5[1:20], rep("",14), nrow(data)),
"Diff in Mean, by gradient, controls" = c(t1_col6[1:20], rep("",14), nrow(data)))
stargazer(table1_2, summary=FALSE, no.space = TRUE, type="text",
title = "Baseline Variables by Electrification Project Status and Gradient",
out="table1.tex", notes=c("Column 5 shows coefficients from a regression of each covariate on gradient",
"Column 6 additionally controls for all other covariates and district fixed effects",
"Differences in columns 4-6 are significant at p < 0.01***, p < 0.05** or p <0.1* level"))
stargazer(table1_2, summary=FALSE, no.space = TRUE, #type="text",
title = "Baseline Variables by Electrification Project Status and Gradient",
out="table1.tex", notes=c("Column 5 shows coefficients from a regression of each covariate on gradient",
"Column 6 additionally controls for all other covariates and district fixed effects",
"Differences in columns 4-6 are significant at p < 0.01***, p < 0.05** or p <0.1* level"))
# Export
stargazer(t4_col4, t4_col5, t4_col7, t4_col8, t5_col4, t5_col5, t5_col7, t5_col8 , type="text",
keep=c("T", "`T(fit)`", "base_hhpovrate0", "prop_head_f_a0", "sexratio0_a"),
order=c("T", "`T(fit)`", "base_hhpovrate0", "prop_head_f_a0", "sexratio0_a"),
dep.var.caption = c("$\\Delta_t$ Female Employment Rate", "$\\Delta_t$ Male Employment Rate"),
no.space=TRUE, covariate.labels = t4_var_names,
dep.var.labels = c("OLS", "IV", "IV", "IV", "OLS", "IV", "IV", "IV"),
omit.stat=c("LL","ser","f", "adj.rsq"),
add.lines = lines,
notes=notes,
out = "table4.tex")
## -----
## Table 4 : Effects of Electrification on employment: Census Community Data (female)
## Table 5 : Effects of Electrification on employment: Census Community Data (male)
## (together)
## -----
yf = "d_prop_emp_f"
ym= "d_prop_emp_m"
var1 <- c("T")
var2 <- c("kms_to_subs0_10", "baseline_hhdens0_10",
"base_hhpovrate0", "prop_head_f_a0", "sexratio0_a", "prop_indianwhite0_10",
"kms_to_road0_10", "kms_to_town0_10", "prop_matric_m0", "prop_matric_f0")
var3 <- c("d_prop_waterclose", "d_prop_flush")
cluster <- "placecode0"
districtfe <- "dccode0"
iv <- "(T~mean_grad_new_10)"
# Table labels etc
t4_var_names <- c("Eskom Project", "Eskom Project (fit)", "Poverty Rate", "Female-headed HHs", "Adult sex ratio")
lines = list(c("Baseline controls?", "N", "Y", "Y", "Y", "N", "Y", "Y", "Y"),
c("District FE?", "N", "N", "Y", "Y", "N", "N", "Y", "Y"),
c("$\\Delta_t$ other services?", "N", "N", "N", "Y", "N", "N", "N", "Y"))
notes = c("Standard errors are clustered at the subdistrict level",
"Eskom project is instrumented with mean community land gradient",
"See table 3 for full list of control variables")
## -----
## Table 4
# OLS
t4_col1 <- felm(data=data, as.formula(spec(y=yf, x=c(var1))))
t4_col2 <- felm(data=data, as.formula(spec(y=yf, x=c(var1, var2))))
t4_col3 <- felm(data=data, as.formula(spec(y=yf, x=c(var1, var2), fe=districtfe)))
t4_col4 <- felm(data=data, as.formula(spec(y=yf, x=c(var1, var2, var3), fe=districtfe)))
# IV
t4_col5 <- felm(data=data, as.formula(spec(y=yf, x=1, iv=iv)))
t4_col6 <- felm(data=data, as.formula(spec(y=yf, x=c(1, var2), iv=iv)))
t4_col7 <- felm(data=data, as.formula(spec(y=yf, x=var2, iv=iv, fe=districtfe)))
t4_col8 <- felm(data=data, as.formula(spec(y=yf, x=c(var2, var3), iv=iv, fe=districtfe)))
t5_col1 <- felm(data=data, as.formula(spec(y=ym, x=c(var1))))
t5_col2 <- felm(data=data, as.formula(spec(y=ym, x=c(var1, var2))))
t5_col3 <- felm(data=data, as.formula(spec(y=ym, x=c(var1, var2), fe=districtfe)))
t5_col4 <- felm(data=data, as.formula(spec(y=ym, x=c(var1, var2, var3), fe=districtfe)))
t5_col5 <- felm(data=data, as.formula(spec(y=ym, x=1, iv=iv)))
t5_col6 <- felm(data=data, as.formula(spec(y=ym, x=c(1, var2), iv=iv)))
t5_col7 <- felm(data=data, as.formula(spec(y=ym, x=var2, iv=iv, fe=districtfe)))
t5_col8 <- felm(data=data, as.formula(spec(y=ym, x=c(var2, var3), iv=iv, fe=districtfe)))
# Export
stargazer(t4_col4, t4_col5, t4_col7, t4_col8, t5_col4, t5_col5, t5_col7, t5_col8 , type="text",
keep=c("T", "`T(fit)`", "base_hhpovrate0", "prop_head_f_a0", "sexratio0_a"),
order=c("T", "`T(fit)`", "base_hhpovrate0", "prop_head_f_a0", "sexratio0_a"),
dep.var.caption = c("$\\Delta_t$ Female Employment Rate", "$\\Delta_t$ Male Employment Rate"),
no.space=TRUE, covariate.labels = t4_var_names,
dep.var.labels = c("OLS", "IV", "IV", "IV", "OLS", "IV", "IV", "IV"),
omit.stat=c("LL","ser","f", "adj.rsq"),
add.lines = lines,
notes=notes,
out = "table4.tex")
# Export
stargazer(t4_col4, t4_col5, t4_col7, t4_col8, t5_col4, t5_col5, t5_col7, t5_col8 , type="text",
keep=c("T", "`T(fit)`", "base_hhpovrate0", "prop_head_f_a0", "sexratio0_a"),
order=c("T", "`T(fit)`", "base_hhpovrate0", "prop_head_f_a0", "sexratio0_a"),
#c("$\\Delta_t$ Female Employment Rate", "$\\Delta_t$ Male Employment Rate"),
no.space=TRUE, covariate.labels = t4_var_names,
dep.var.labels = c("OLS", "IV", "IV", "IV", "OLS", "IV", "IV", "IV"),
omit.stat=c("LL","ser","f", "adj.rsq"),
add.lines = lines,
notes=notes,
out = "table4.tex")
# Export
stargazer(t4_col4, t4_col5, t4_col7, t4_col8, t5_col4, t5_col5, t5_col7, t5_col8 , #type="text",
keep=c("T", "`T(fit)`", "base_hhpovrate0", "prop_head_f_a0", "sexratio0_a"),
order=c("T", "`T(fit)`", "base_hhpovrate0", "prop_head_f_a0", "sexratio0_a"),
#c("$\\Delta_t$ Female Employment Rate", "$\\Delta_t$ Male Employment Rate"),
no.space=TRUE, covariate.labels = t4_var_names,
dep.var.labels = c("OLS", "IV", "IV", "IV", "OLS", "IV", "IV", "IV"),
omit.stat=c("LL","ser","f", "adj.rsq"),
add.lines = lines,
notes=notes,
out = "table4.tex")
t10_col1a <- felm(data=data, as.formula(spec(y="d_logafrican_ppl", x=c(var1, var2, var3), fe=districtfe)))
t10_col2a <- felm(data=data, as.formula(spec(y="d_logafrican_ppl", x=c(var2, var3), iv="(T~mean_grad_new_10)", fe=districtfe)))
t10_col1b <- felm(data=data, as.formula(spec(y="dlogpop_nomig", x=c(var1, var2, var3), fe=districtfe)))
t10_col2b <- felm(data=data, as.formula(spec(y="dlogpop_nomig", x=c(var2, var3), iv="(T~mean_grad_new_10)", fe=districtfe)))
t10_col3b <- felm(data=data, as.formula(spec(y="d_prop_lfs_emp_f_nomig", x=c(var1, var2, var3), fe=districtfe)))
t10_col4b <- felm(data=data, as.formula(spec(y="d_prop_lfs_emp_f_nomig", x=c(var2, var3), iv="(T~mean_grad_new_10)", fe=districtfe)))
t10_col5b <- felm(data=data, as.formula(spec(y="d_prop_lfs_emp_m_nomig", x=c(var1, var2, var3), fe=districtfe)))
t10_col6b <- felm(data=data, as.formula(spec(y="d_prop_lfs_emp_m_nomig", x=c(var2, var3), iv="(T~mean_grad_new_10)", fe=districtfe)))
# Split the table in 2 because too big
stargazer(t10_col1a, t10_col2a, t10_col1b, t10_col2b, t10_col3a, t10_col4a,
#t10_col5a, t10_col6a, t10_col3b, t10_col4b, t10_col5b, t10_col6b,
keep=c("T", "`T(fit)`"),
order=c("T", "`T(fit)`"),
no.space=TRUE, single.row=FALSE,
covariate.labels = c("Eskom Project"),
add.lines = list(c("", "OLS", "IV", "OLS", "IV", "OLS", "IV")),
keep.stat='N',
notes=notes, type="text",
out = "table10_1.tex")
# Regress OLS with FE, IV with FE for each var
t10_col1a <- felm(data=data, as.formula(spec(y="d_logafrican_ppl", x=c(var1, var2, var3), fe=districtfe)))
t10_col2a <- felm(data=data, as.formula(spec(y="d_logafrican_ppl", x=c(var2, var3), iv="(T~mean_grad_new_10)", fe=districtfe)))
t10_col1b <- felm(data=data, as.formula(spec(y="dlogpop_nomig", x=c(var1, var2, var3), fe=districtfe)))
t10_col2b <- felm(data=data, as.formula(spec(y="dlogpop_nomig", x=c(var2, var3), iv="(T~mean_grad_new_10)", fe=districtfe)))
t10_col3b <- felm(data=data, as.formula(spec(y="d_prop_lfs_emp_f_nomig", x=c(var1, var2, var3), fe=districtfe)))
t10_col4b <- felm(data=data, as.formula(spec(y="d_prop_lfs_emp_f_nomig", x=c(var2, var3), iv="(T~mean_grad_new_10)", fe=districtfe)))
t10_col5b <- felm(data=data, as.formula(spec(y="d_prop_lfs_emp_m_nomig", x=c(var1, var2, var3), fe=districtfe)))
t10_col6b <- felm(data=data, as.formula(spec(y="d_prop_lfs_emp_m_nomig", x=c(var2, var3), iv="(T~mean_grad_new_10)", fe=districtfe)))
# Need to get rid of baseline shares in male / female with high school (unclear to me why, but that's the author seems to be doing)
var_shares <- c("kms_to_subs0", "baseline_hhdens0", "base_hhpovrate0", "prop_head_f_a0",
"sexratio0_a", "prop_indianwhite0", "kms_to_road0", "kms_to_town0")
t10_col3a <-felm(data=data, as.formula(spec(y="d_prop_matric_f", x=c("T", var_shares), fe=districtfe)))
t10_col4a <-felm(data=data, as.formula(spec(y="d_prop_matric_f", x=c(var_shares), iv=iv, fe=districtfe)))
t10_col5a <-felm(data=data, as.formula(spec(y="d_prop_matric_m", x=c("T", var_shares), fe=districtfe)))
t10_col6a <-felm(data=data, as.formula(spec(y="d_prop_matric_m", x=c(var_shares), iv=iv, fe=districtfe)))
# Split the table in 2 because too big
stargazer(t10_col1a, t10_col2a, t10_col1b, t10_col2b, t10_col3a, t10_col4a,
#t10_col5a, t10_col6a, t10_col3b, t10_col4b, t10_col5b, t10_col6b,
keep=c("T", "`T(fit)`"),
order=c("T", "`T(fit)`"),
no.space=TRUE, single.row=FALSE,
covariate.labels = c("Eskom Project"),
add.lines = list(c("", "OLS", "IV", "OLS", "IV", "OLS", "IV")),
keep.stat='N',
notes=notes, type="text",
out = "table10_1.tex")
# Split the table in 2 because too big
stargazer(t10_col1a, t10_col2a, t10_col1b, t10_col2b, t10_col3a, t10_col4a,
#t10_col5a, t10_col6a, t10_col3b, t10_col4b, t10_col5b, t10_col6b,
keep=c("T", "`T(fit)`"),
order=c("T", "`T(fit)`"),
no.space=TRUE, single.row=FALSE,
covariate.labels = c("Eskom Project"),
dep.var.labels.include = FALSE,
add.lines = list(c("", "OLS", "IV", "OLS", "IV", "OLS", "IV")),
keep.stat='N',
notes=notes, type="text",
out = "table10_1.tex")
# Split the table in 2 because too big
stargazer(t10_col1a, t10_col2a, t10_col1b, t10_col2b, t10_col3a, t10_col4a,
#t10_col5a, t10_col6a, t10_col3b, t10_col4b, t10_col5b, t10_col6b,
keep=c("T", "`T(fit)`"),
order=c("T", "`T(fit)`"),
no.space=TRUE, single.row=FALSE,
covariate.labels = c("Eskom Project"),
dep.var.labels.include = FALSE,
add.lines = list(c("", "OLS", "IV", "OLS", "IV", "OLS", "IV")),
keep.stat='N',
notes=notes, #type="text",
out = "table10_1.tex")
stargazer(t10_col5a, t10_col6a, t10_col3b, t10_col4b, t10_col5b, t10_col6b,
keep=c("T", "`T(fit)`"),
order=c("T", "`T(fit)`"),
no.space=TRUE, single.row=FALSE,
covariate.labels = c("Eskom Project"),
dep.var.labels.include = FALSE,
add.lines = list(c("", "OLS", "IV", "OLS", "IV", "OLS", "IV")),
keep.stat='N',
notes=notes, #type="text",
out = "table10_2.tex")
## Import data
hh_survey <- read.dta("hhsurveydata.dta")
## Import data
hh_survey <- read.dta("hhsurveydata.dta")
## Some cleaning to do --> follow Dinkelman steps from the appendix
# Get rid of MD that have missing data
missing = c(513, 519, 524, 527, 530, 540, 543, 544)
hh_survey <- hh_survey %>%
# Get rid of 1996 to have even trends (1995, 97, 99, 2001)
filter(year != 1996) %>%
group_by(year) %>%
mutate(t = n()) %>%
ungroup()
# Reconstitute the panel dataset (at the hh level)
hh_survey <- hh_survey %>%
arrange(year, hhid) %>%
mutate(hhmark = 1,
hhmark = ifelse(hhid == lag(hhid), NA, hhmark))
hh_survey$hhmark[1] = 1
hh_survey <- hh_survey %>%
mutate(temp = ifelse(hhmark==1, elec, NA))
# replace hours by 0 if no work
hh_survey$hoursusual <- ifelse(hh_survey$work==0 & !is.na(hh_survey$hoursusual), NA, hh_survey$hoursusual)
# Compute rate of electrification by year - MD
hh_survey <- hh_survey %>%
group_by(md_code, year) %>%
mutate(mdelec = mean(temp, na.rm=T)) %>%
ungroup() %>%
mutate(mdelec2 = ifelse(md_code %in% missing, NA, mdelec))
# Compute clean trend
hh_survey <- hh_survey %>%
mutate(trend = year - 1995,
trend = ifelse(trend==2, 1, ifelse(trend==4,2, ifelse(trend==6,3, 0))),
female = ifelse(sex==0, 1, 0))
## Reproduce specification from paper
y_v <- c("work", "hoursusual", "logwage", "logearning")
x_v <- c("age", "age2", "edyears")
# For each variable of interest, regress it on age + age2 + edyears using the correct weights
# Average residuals at the MD + Year level with correct weights
i = 1
y = y_v[i]
hh <- hh_survey %>%
select(work, hoursusual, logwage, logearning, age, age2, edyears, mdelec2, trend, perswgt, md_code, female) #%>%
hh <- hh %>%
filter(!is.na(age),
!is.na(edyears),
!is.na(mdelec2))
reg <- felm(data=hh, formula=(as.formula(spec(y=y, x="age + age2 + edyears", cluster = "0"))), weights=hh$perswgt)
hh$eresidual <- reg$residuals
hh$trend = as.factor(hh$trend)
hh$md_code = as.factor(hh$md_code)
hh$female = as.factor(hh$female)
hh <- hh %>%
group_by(trend, md_code, female) %>%
summarize(eresidual = weighted.mean(eresidual, perswgt),
mdelec2 = weighted.mean(mdelec2, perswgt)) %>%
ungroup()
hh$trend = as.numeric(hh$trend)
hh$female = as.numeric(as.character(hh$female))
hh$femtrend = hh$female*hh$trend
hh$femelec = hh$female*hh$mdelec2
hh$md_code = as.factor(hh$md_code)
md_codeunique = unique(hh$md_code)
# Get FE & Trends as factors
for (i in 1:length(md_codeunique)){
name = paste("m", md_codeunique[i], sep="")
hh[,name] = as.factor(unlist(hh$md_code==md_codeunique[i]))
}
for (i in 1:length(md_codeunique)){
name = paste("mtrend_", md_codeunique[i], sep="")
hh[,name] = as.factor(unlist((hh$trend*(hh$md_code==md_codeunique[i]))))
}
hh$m502
names(hh)[47:83]
names(hh)
## Regressions
list_fe <- names(hh)[47:83]
fe = paste(paste(list_fe, collapse=" + "))
# OLS
t7_col2 <- felm(data=hh[hh$female==1,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend", "md_code"), cluster="md_code")))
t7_col4 <- felm(data=hh[hh$female==0,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend", fe), cluster="md_code")))
felm(data=hh[hh$female==1,], formula = as.formula(spec(y="eresidual", x=c("mdelec2", "trend"), fe=fe, cluster="md_code")))
stargazer(t7_col2, t7_col4, type="text")
stargazer(t7_col2, t7_col4, type="text", omit="mtrend")
stargazer(t7_col2, t7_col4, type="text", omit=c("md_code", "mtrend"))
# OLS
t7_col2 <- felm(data=hh[hh$female==1,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend"), cluster="md_code")))
t7_col4 <- felm(data=hh[hh$female==0,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend"), cluster="md_code")))
stargazer(t7_col2, t7_col4, type="text", omit=c("md_code", "mtrend"))
## Regressions
list_fe <- names(hh)[47:83]
list_fe
names(hh)
# For each variable of interest, regress it on age + age2 + edyears using the correct weights
# Average residuals at the MD + Year level with correct weights
i = 1
y = y_v[i]
hh <- hh_survey %>%
select(work, hoursusual, logwage, logearning, age, age2, edyears, mdelec2, trend, perswgt, md_code, female) #%>%
hh <- hh %>%
filter(!is.na(age),
!is.na(edyears),
!is.na(mdelec2))
reg <- felm(data=hh, formula=(as.formula(spec(y=y, x="age + age2 + edyears", cluster = "0"))), weights=hh$perswgt)
hh$eresidual <- reg$residuals
hh$trend = as.factor(hh$trend)
hh$md_code = as.factor(hh$md_code)
hh$female = as.factor(hh$female)
hh <- hh %>%
group_by(trend, md_code, female) %>%
summarize(eresidual = weighted.mean(eresidual, perswgt),
mdelec2 = weighted.mean(mdelec2, perswgt)) %>%
ungroup()
hh$trend = as.numeric(hh$trend)
hh$female = as.numeric(as.character(hh$female))
hh$femtrend = hh$female*hh$trend
hh$femelec = hh$female*hh$mdelec2
hh$md_code = as.factor(hh$md_code)
md_codeunique = unique(hh$md_code)
# Get FE & Trends as factors
for (i in 1:length(md_codeunique)){
name = paste("mtrend_", md_codeunique[i], sep="")
hh[,name] = as.factor(unlist((hh$trend*(hh$md_code==md_codeunique[i]))))
}
## Regressions
list_fe <- c(names(hh)[47:83], "md_code")
names(hh)
## Regressions
list_fe <- c(names(hh)[8:45], "md_code")
fe = paste(paste(list_fe, collapse=" + "))
# Looking into FE / Trends
t7_col2 <- felm(data=hh[hh$female==1,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend"), fe=fe, cluster="md_code")))
## Regressions
list_fe <- c(names(hh)[8:45], "md_code")
list_fe
fe = paste(paste(list_fe, collapse=" + "))
fe
# Looking into FE / Trends
t7_col2 <- felm(data=hh[hh$female==1,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend"), fe=fe, cluster="md_code")))
# Looking into FE / Trends
t7_col2 <- felm(data=hh[hh$female==1,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend"), cluster="md_code")))
## Regressions
list_fe <- c(names(hh)[9:45], "md_code")
fe = paste(paste(list_fe, collapse=" + "))
# OLS
t7_col2 <- felm(data=hh[hh$female==1,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend"), cluster="md_code")))
t7_col4 <- felm(data=hh[hh$female==0,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend"), cluster="md_code")))
stargazer(t7_col2, t7_col4, type="text", omit=c("md_code", "mtrend")) # I obtain similar results than in the paper
# Looking into FE / Trends
t7_col2 <- felm(data=hh[hh$female==1,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend"), fe=fe, cluster="md_code")))
t7_col3 <- felm(data=hh[hh$female==1,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend"), fe=fe, cluster="md_code")))
t7_col3 <- felm(data=hh[hh$female==0,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend"), fe=fe, cluster="md_code")))
stargazer(t7_col2, t7_col4, type="text", omit=c("md_code", "mtrend")) # results seem very sensitive to the way trends and FE are defined
stargazer(t7_col2, t7_col4, type="text", omit=c("md_code", "mtrend"), dep.var.labels.include = FALSE) # results seem very sensitive to the way trends and FE are defined
t7_col4 <- felm(data=hh[hh$female==0,], formula=as.formula(spec(y="eresidual", x=c("mdelec2", "trend"), fe=fe, cluster="md_code")))
stargazer(t7_col2, t7_col4, type="text", omit=c("md_code", "mtrend"), dep.var.labels.include = FALSE) # results seem very sensitive to the way trends and FE are defined
## set working directory for Mac and PC
rm(list=ls())
setwd("~/Documents/PhD/Skwad/Empirical Analysis III/Problem Sets/")
